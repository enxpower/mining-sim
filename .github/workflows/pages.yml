name: Build & Deploy Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) 复制源代码到 public/src（生产环境用相对 ./src/ 路径）
      - name: Bundle src into public/src
        run: |
          mkdir -p public/src
          rsync -a --delete src/ public/src/ || true

      # 2) 准备 vendor 目录（放 ems-engine.min.js）
      - name: Ensure vendor dir
        run: mkdir -p public/vendor

      # 3) （可选）下载私库引擎产物；若没有 SECRET 或下载失败，跳过不报错
      - name: Try download private engine (optional)
        if: ${{ secrets.ENGINE_PAT != '' }}
        env:
          GH_TOKEN: ${{ secrets.ENGINE_PAT }}   # PAT: 需要对私库有 read:packages / read:repo 或至少 read releases
          ENGINE_OWNER: enxpower               # ← 如有不同，请改成你的组织/账号
          ENGINE_REPO: ems-engine              # ← 私库名
          ENGINE_TAG: latest                   # ← 取 latest release
        run: |
          set -e
          echo "Attempting to fetch ${ENGINE_OWNER}/${ENGINE_REPO}@${ENGINE_TAG}"
          # 下载失败不会阻断流程（例如 release 不存在 / 权限不足）
          gh release download "${ENGINE_TAG}" \
            --repo "${ENGINE_OWNER}/${ENGINE_REPO}" \
            --pattern "ems-engine.min.js" \
            --dir "public/vendor" || echo "⚠️ Engine asset not found or no permission. Continuing without it."
          ls -l public/vendor || true

      # 4) 配置 Pages，并上传静态站点工件（public）
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact (public)
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
